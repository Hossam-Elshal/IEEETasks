========= 2️⃣ make function to solve the following ===========================

function findLongestString(arr) {
    if (arr.length === 0) {
        return null;
    }
    return arr.reduce((longest, current) => 
        current.length > longest.length ? current : longest, ""
    );
}

const userInput = prompt("Enter an array of strings, separated by commas:");
const array = userInput ? userInput.split(",").map(str => str.trim()) : [];

const longestString = findLongestString(array);

if (longestString) {
    console.log("The longest string is:", longestString);
} else {
    console.log("The array is empty or contains no strings.");
}

========= 3️⃣ what is different bettwen setInterval setTimeout ==============

[1]setTimeout:
The setTimeout function is used to schedule the execution of a function after a specified delay. It is ideal for scenarios where you need to execute a task once, with a delay, rather than repeatedly.

Example:
console.log("Start");
setTimeout(() => {
  console.log("Delayed log after 2 seconds");
}, 2000);
console.log("End");

output will be:
Start
End
Delayed log after 2 seconds

[2]setInterval:
setInterval is used to repeatedly execute a function at a fixed interval. It is suitable for scenarios where you need to perform a task in regular intervals until explicitly stopped.

Example:
setInterval(() => {
  console.log("Executed every 2 seconds");
}, 2000);

output will be:
Executed every 2 seconds
Executed every 2 seconds
Executed every 2 seconds
Executed every 2 seconds
the same line will printed Infinity..... 


conclusion:
setTimeout(expression, timeout); runs the code/function once after the timeout.
setInterval(expression, timeout); runs the code/function repeatedly, with the length of the timeout between each repeat.